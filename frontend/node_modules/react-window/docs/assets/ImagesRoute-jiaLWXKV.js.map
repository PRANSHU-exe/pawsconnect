{"version":3,"file":"ImagesRoute-jiaLWXKV.js","sources":["../../src/routes/list/examples/ImageRow.example.tsx","../../src/routes/list/examples/Images.example.tsx","../../src/routes/list/examples/useImageSizeCache.example.ts","../../src/routes/list/ImagesRoute.tsx"],"sourcesContent":["import { Box } from \"../../../components/Box\";\nimport type { Cache } from \"./useImageSizeCache.example\";\n\n// <begin>\n\nimport { type RowComponentProps } from \"react-window\";\n\ntype RowProps = {\n  cache: Cache;\n  images: string[];\n};\n\nfunction RowComponent({\n  cache,\n  index,\n  images,\n  style\n}: RowComponentProps<RowProps>) {\n  const url = images[index];\n\n  const isCached = !!cache.getImageSize(index);\n\n  return (\n    <div style={style}>\n      {isCached || <LoadingSpinner />}\n      <img\n        className={isCached ? undefined : \"opacity-0\"}\n        onLoad={(event) => {\n          // Update the cache with image dimensions once it's loaded\n          cache.setImageSize(index, {\n            height: event.currentTarget.naturalHeight,\n            width: event.currentTarget.naturalWidth\n          });\n        }}\n        src={url}\n      />\n    </div>\n  );\n}\n\n// <end>\n\nfunction LoadingSpinner() {\n  return (\n    <Box\n      align=\"center\"\n      className=\"h-full color-slate-700\"\n      direction=\"column\"\n      justify=\"center\"\n    >\n      Loading...\n    </Box>\n  );\n}\n\nexport { RowComponent };\nexport type { RowProps };\n","import { RowComponent, type RowProps } from \"./ImageRow.example\";\nimport type { Size } from \"./useImageSizeCache.example\";\nimport { useImageSizeCache } from \"./useImageSizeCache.example\";\n\n// <begin>\n\nimport { useCallback, useState } from \"react\";\nimport { List } from \"react-window\";\n\nfunction Example({ images }: { images: string[] }) {\n  const [listSize, setListSize] = useState<Size>({ height: 0, width: 0 });\n\n  // Rows will lazily register image sizes in this cache\n  const cache = useImageSizeCache();\n\n  const rowHeight = useCallback(\n    (index: number) => {\n      const size = cache.getImageSize(index) ?? cache.getAverageSize();\n\n      // Scale the image to fit within the list\n      return listSize.width * (size.height / size.width);\n    },\n    [cache, listSize]\n  );\n\n  return (\n    <List<RowProps>\n      onResize={setListSize}\n      rowComponent={RowComponent}\n      rowCount={images.length}\n      rowHeight={rowHeight}\n      rowProps={{ cache, images }}\n    />\n  );\n}\n\n// <end>\n\nconst IMAGES: string[] = [\n  \"/images/animal-3546613_1280.jpg\",\n  \"/images/ball-bearings-1958083_1280.jpg\",\n  \"/images/bourke-luck-potholes-163065_1280.jpg\",\n  \"/images/child-1439468_1280.jpg\",\n  \"/images/digiart-3405596_1280.jpg\",\n  \"/images/electrical-cable-mess-2654084_1280.jpg\",\n  \"/images/elephant-8608983_1280.jpg\",\n  \"/images/fema-4987740_1280.jpg\",\n  \"/images/log-3135150_1280.jpg\",\n  \"/images/man-1838330_1280.jpg\",\n  \"/images/manipulation-2735724_1280.jpg\",\n  \"/images/newborn-6467761_1280.jpg\",\n  \"/images/old-farm-house-2096642_1280.jpg\",\n  \"/images/people-2557534_1280.jpg\",\n  \"/images/photo-1516712109157-6a67f5d73fa1.jpg\",\n  \"/images/photo-1562123408-fbf8cbf92c03.jpg\",\n  \"/images/sculpture-99484_1280.jpg\",\n  \"/images/sport-4765008_1280.jpg\",\n  \"/images/styrofoam-19493_1280.jpg\",\n  \"/images/trabi-328402_1280.jpg\",\n  \"/images/trailers-5073244_1280.jpg\",\n  \"/images/tub-114349_1280.jpg\",\n  \"/images/venus-fly-trap-3684935_1280.jpg\",\n  \"/images/web-5013633_1280.jpg\",\n  \"/images/winter-1675197_1280.jpg\",\n  \"/images/woman-1838149_1280.jpg\"\n];\n\nfunction ExampleWithImages() {\n  return <Example images={IMAGES} />;\n}\n\nexport { ExampleWithImages, RowComponent };\nexport type { Size };\n","import { useCallback, useMemo, useState } from \"react\";\n\n// <begin>\n\ntype Size = {\n  height: number;\n  width: number;\n};\n\ntype Cache = {\n  getAverageSize(): Size;\n  getImageSize(index: number): Size | undefined;\n  setImageSize(index: number, size: Size): void;\n};\n\nfunction useImageSizeCache(): Cache {\n  const [cachedRowHeights, setCachedRowHeights] = useState<Map<number, Size>>(\n    new Map()\n  );\n\n  const getAverageSize = useCallback(() => {\n    let totalHeight = 0;\n    let totalWidth = 0;\n\n    cachedRowHeights.forEach((size) => {\n      totalHeight += size.height;\n      totalWidth += size.width;\n    });\n\n    if (totalHeight === 0) {\n      return {\n        height: 1,\n        width: 1\n      };\n    }\n\n    return {\n      height: totalHeight / cachedRowHeights.size,\n      width: totalWidth / cachedRowHeights.size\n    };\n  }, [cachedRowHeights]);\n\n  const getImageSize = useCallback(\n    (index: number) => cachedRowHeights.get(index),\n    [cachedRowHeights]\n  );\n\n  const setImageSize = useCallback((index: number, size: Size) => {\n    setCachedRowHeights((prevMap) => {\n      const clonedMap = new Map(prevMap);\n      clonedMap.set(index, size);\n      return clonedMap;\n    });\n  }, []);\n\n  return useMemo(\n    () => ({\n      getAverageSize,\n      getImageSize,\n      setImageSize\n    }),\n    [getAverageSize, getImageSize, setImageSize]\n  );\n}\n\n// <end>\n\nexport { useImageSizeCache };\nexport type { Cache, Size };\n","import { Block } from \"../../components/Block\";\nimport { Box } from \"../../components/Box\";\nimport { Code } from \"../../components/code/Code\";\nimport { Header } from \"../../components/Header\";\nimport { ExampleWithImages } from \"./examples/Images.example\";\nimport ImageRowMarkdown from \"../../../public/generated/code-snippets/ImageRow.json\";\nimport ImagesMarkdown from \"../../../public/generated/code-snippets/Images.json\";\nimport useImageSizeCacheMarkdown from \"../../../public/generated/code-snippets/useImageSizeCache.json\";\n\nexport default function ImagesRoute() {\n  return (\n    <Box direction=\"column\" gap={4}>\n      <Header section=\"Other\" title=\"Variable size images\" />\n      <div>\n        Lists can be used to render content of unknown sizes, though it requires\n        a user-provided cache.\n      </div>\n      <div>Here's an example of a list of images of varying sizes:</div>\n      <Block className=\"h-150\" data-focus-within=\"bold\">\n        <ExampleWithImages />\n      </Block>\n      <div>\n        First, let's look at the custom cache we'll use to store image sizes.\n      </div>\n      <Code html={useImageSizeCacheMarkdown.html} />\n      <div>\n        When a row is rendered for the first time, it should record the image\n        size in the cache.\n      </div>\n      <Code html={ImageRowMarkdown.html} />\n      <div>The list can use the cache to determine the size of each row.</div>\n      <Code html={ImagesMarkdown.html} />\n    </Box>\n  );\n}\n"],"names":["RowComponent","cache","index","images","style","url","isCached","getImageSize","jsxs","children","LoadingSpinner","jsx","className","onLoad","event","setImageSize","height","currentTarget","naturalHeight","width","naturalWidth","src","Box","align","direction","justify","Example","listSize","setListSize","useState","cachedRowHeights","setCachedRowHeights","Map","getAverageSize","useCallback","totalHeight","totalWidth","forEach","size","get","prevMap","clonedMap","set","useMemo","useImageSizeCache","rowHeight","List","onResize","rowComponent","rowCount","length","rowProps","IMAGES","ExampleWithImages","ImagesRoute","gap","Header","section","title","Block","Code","html","useImageSizeCacheMarkdown","ImageRowMarkdown","ImagesMarkdown"],"mappings":"6NAYA,SAASA,GAAaC,MACpBA,EAAAC,MACAA,EAAAC,OACAA,EAAAC,MACAA,IAEA,MAAMC,EAAMF,EAAOD,GAEbI,IAAaL,EAAMM,aAAaL,GAEtC,OACEM,OAAC,OAAIJ,QACFK,SAAA,CAAAH,SAAaI,EAAA,IACdC,EAAAA,IAAC,MAAA,CACCC,UAAWN,OAAW,EAAY,YAClCO,OAASC,IAEPb,EAAMc,aAAab,EAAO,CACxBc,OAAQF,EAAMG,cAAcC,cAC5BC,MAAOL,EAAMG,cAAcG,gBAG/BC,IAAKhB,MAIb,CAIA,SAASK,IACP,OACEC,EAAAA,IAACW,EAAA,CACCC,MAAM,SACNX,UAAU,yBACVY,UAAU,SACVC,QAAQ,SACThB,SAAA,cAIL,CC5CA,SAASiB,GAAQvB,OAAEA,IACjB,MAAOwB,EAAUC,GAAeC,EAAAA,SAAe,CAAEb,OAAQ,EAAGG,MAAO,IAG7DlB,ECER,WACE,MAAO6B,EAAkBC,GAAuBF,EAAAA,aAC1CG,KAGAC,EAAiBC,EAAAA,YAAY,KACjC,IAAIC,EAAc,EACdC,EAAa,EAOjB,OALAN,EAAiBO,QAASC,IACxBH,GAAeG,EAAKtB,OACpBoB,GAAcE,EAAKnB,QAGD,IAAhBgB,EACK,CACLnB,OAAQ,EACRG,MAAO,GAIJ,CACLH,OAAQmB,EAAcL,EAAiBQ,KACvCnB,MAAOiB,EAAaN,EAAiBQ,OAEtC,CAACR,IAEEvB,EAAe2B,EAAAA,YAClBhC,GAAkB4B,EAAiBS,IAAIrC,GACxC,CAAC4B,IAGGf,EAAemB,EAAAA,YAAY,CAAChC,EAAeoC,KAC/CP,EAAqBS,IACnB,MAAMC,EAAY,IAAIT,IAAIQ,GAE1B,OADAC,EAAUC,IAAIxC,EAAOoC,GACdG,KAER,IAEH,OAAOE,EAAAA,QACL,KAAA,CACEV,iBACA1B,eACAQ,iBAEF,CAACkB,EAAgB1B,EAAcQ,GAEnC,CDlDgB6B,GAERC,EAAYX,EAAAA,YACfhC,IACC,MAAMoC,EAAOrC,EAAMM,aAAaL,IAAUD,EAAMgC,iBAGhD,OAAON,EAASR,OAASmB,EAAKtB,OAASsB,EAAKnB,QAE9C,CAAClB,EAAO0B,IAGV,OACEhB,EAAAA,IAACmC,EAAA,CACCC,SAAUnB,EACVoB,aAAchD,EACdiD,SAAU9C,EAAO+C,OACjBL,YACAM,SAAU,CAAElD,QAAOE,WAGzB,CAIA,MAAMiD,EAAmB,CACvB,kCACA,yCACA,+CACA,iCACA,mCACA,iDACA,oCACA,gCACA,+BACA,+BACA,wCACA,mCACA,0CACA,kCACA,+CACA,4CACA,mCACA,iCACA,mCACA,gCACA,oCACA,8BACA,0CACA,+BACA,kCACA,kCAGF,SAASC,IACP,SAAO1C,IAACe,EAAA,CAAQvB,OAAQiD,GAC1B,81xCE5DA,SAAwBE,IACtB,OACE9C,EAAAA,KAACc,EAAA,CAAIE,UAAU,SAAS+B,IAAK,EAC3B9C,SAAA,CAAAE,EAAAA,IAAC6C,EAAA,CAAOC,QAAQ,QAAQC,MAAM,2BAC9B/C,IAAC,OAAIF,SAAA,sGAILE,IAAC,OAAIF,SAAA,4DACLE,EAAAA,IAACgD,GAAM/C,UAAU,QAAQ,oBAAkB,OACzCH,WAAAE,IAAC0C,UAEH1C,IAAC,OAAIF,SAAA,4EAGLE,IAACiD,EAAA,CAAKC,KAAMC,MACZnD,IAAC,OAAIF,SAAA,+FAILE,IAACiD,EAAA,CAAKC,KAAME,EAAiBF,SAC7BlD,IAAC,OAAIF,SAAA,oEACLE,IAACiD,EAAA,CAAKC,KAAMG,MAGlB"}