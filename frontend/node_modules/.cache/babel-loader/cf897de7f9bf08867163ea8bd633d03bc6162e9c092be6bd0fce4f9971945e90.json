{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\prans\\\\pawsconnect\\\\frontend\\\\src\\\\contexts\\\\ThemeContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ThemeContext = /*#__PURE__*/createContext();\nexport const useTheme = () => {\n  _s();\n  const context = useContext(ThemeContext);\n  if (!context) {\n    throw new Error('useTheme must be used within a ThemeProvider');\n  }\n  return context;\n};\n_s(useTheme, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport const ThemeProvider = ({\n  children\n}) => {\n  _s2();\n  const [isDarkMode, setIsDarkMode] = useState(false);\n  useEffect(() => {\n    // Check for saved theme preference or default to light mode\n    const savedTheme = localStorage.getItem('theme');\n    const prefersDark = window.matchMedia('(prefers-color-scheme: dark)').matches;\n    if (savedTheme) {\n      setIsDarkMode(savedTheme === 'dark');\n    } else {\n      setIsDarkMode(prefersDark);\n    }\n  }, []);\n  useEffect(() => {\n    // Apply theme to document\n    if (isDarkMode) {\n      document.documentElement.setAttribute('data-theme', 'dark');\n    } else {\n      document.documentElement.removeAttribute('data-theme');\n    }\n\n    // Save theme preference\n    localStorage.setItem('theme', isDarkMode ? 'dark' : 'light');\n  }, [isDarkMode]);\n  const toggleTheme = () => {\n    setIsDarkMode(prev => !prev);\n  };\n  const value = {\n    isDarkMode,\n    toggleTheme\n  };\n  return /*#__PURE__*/_jsxDEV(ThemeContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n};\n_s2(ThemeProvider, \"jZSDCHM8qUYa7sOOCe+CR2toAGQ=\");\n_c = ThemeProvider;\nvar _c;\n$RefreshReg$(_c, \"ThemeProvider\");","map":{"version":3,"names":["React","createContext","useContext","useEffect","useState","jsxDEV","_jsxDEV","ThemeContext","useTheme","_s","context","Error","ThemeProvider","children","_s2","isDarkMode","setIsDarkMode","savedTheme","localStorage","getItem","prefersDark","window","matchMedia","matches","document","documentElement","setAttribute","removeAttribute","setItem","toggleTheme","prev","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/prans/pawsconnect/frontend/src/contexts/ThemeContext.js"],"sourcesContent":["import React, { createContext, useContext, useEffect, useState } from 'react';\r\n\r\nconst ThemeContext = createContext();\r\n\r\nexport const useTheme = () => {\r\n  const context = useContext(ThemeContext);\r\n  if (!context) {\r\n    throw new Error('useTheme must be used within a ThemeProvider');\r\n  }\r\n  return context;\r\n};\r\n\r\nexport const ThemeProvider = ({ children }) => {\r\n  const [isDarkMode, setIsDarkMode] = useState(false);\r\n\r\n  useEffect(() => {\r\n    // Check for saved theme preference or default to light mode\r\n    const savedTheme = localStorage.getItem('theme');\r\n    const prefersDark = window.matchMedia('(prefers-color-scheme: dark)').matches;\r\n    \r\n    if (savedTheme) {\r\n      setIsDarkMode(savedTheme === 'dark');\r\n    } else {\r\n      setIsDarkMode(prefersDark);\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    // Apply theme to document\r\n    if (isDarkMode) {\r\n      document.documentElement.setAttribute('data-theme', 'dark');\r\n    } else {\r\n      document.documentElement.removeAttribute('data-theme');\r\n    }\r\n    \r\n    // Save theme preference\r\n    localStorage.setItem('theme', isDarkMode ? 'dark' : 'light');\r\n  }, [isDarkMode]);\r\n\r\n  const toggleTheme = () => {\r\n    setIsDarkMode(prev => !prev);\r\n  };\r\n\r\n  const value = {\r\n    isDarkMode,\r\n    toggleTheme\r\n  };\r\n\r\n  return (\r\n    <ThemeContext.Provider value={value}>\r\n      {children}\r\n    </ThemeContext.Provider>\r\n  );\r\n};"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,EAAEC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9E,MAAMC,YAAY,gBAAGN,aAAa,CAAC,CAAC;AAEpC,OAAO,MAAMO,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC5B,MAAMC,OAAO,GAAGR,UAAU,CAACK,YAAY,CAAC;EACxC,IAAI,CAACG,OAAO,EAAE;IACZ,MAAM,IAAIC,KAAK,CAAC,8CAA8C,CAAC;EACjE;EACA,OAAOD,OAAO;AAChB,CAAC;AAACD,EAAA,CANWD,QAAQ;AAQrB,OAAO,MAAMI,aAAa,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,GAAA;EAC7C,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGZ,QAAQ,CAAC,KAAK,CAAC;EAEnDD,SAAS,CAAC,MAAM;IACd;IACA,MAAMc,UAAU,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;IAChD,MAAMC,WAAW,GAAGC,MAAM,CAACC,UAAU,CAAC,8BAA8B,CAAC,CAACC,OAAO;IAE7E,IAAIN,UAAU,EAAE;MACdD,aAAa,CAACC,UAAU,KAAK,MAAM,CAAC;IACtC,CAAC,MAAM;MACLD,aAAa,CAACI,WAAW,CAAC;IAC5B;EACF,CAAC,EAAE,EAAE,CAAC;EAENjB,SAAS,CAAC,MAAM;IACd;IACA,IAAIY,UAAU,EAAE;MACdS,QAAQ,CAACC,eAAe,CAACC,YAAY,CAAC,YAAY,EAAE,MAAM,CAAC;IAC7D,CAAC,MAAM;MACLF,QAAQ,CAACC,eAAe,CAACE,eAAe,CAAC,YAAY,CAAC;IACxD;;IAEA;IACAT,YAAY,CAACU,OAAO,CAAC,OAAO,EAAEb,UAAU,GAAG,MAAM,GAAG,OAAO,CAAC;EAC9D,CAAC,EAAE,CAACA,UAAU,CAAC,CAAC;EAEhB,MAAMc,WAAW,GAAGA,CAAA,KAAM;IACxBb,aAAa,CAACc,IAAI,IAAI,CAACA,IAAI,CAAC;EAC9B,CAAC;EAED,MAAMC,KAAK,GAAG;IACZhB,UAAU;IACVc;EACF,CAAC;EAED,oBACEvB,OAAA,CAACC,YAAY,CAACyB,QAAQ;IAACD,KAAK,EAAEA,KAAM;IAAAlB,QAAA,EACjCA;EAAQ;IAAAoB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACY,CAAC;AAE5B,CAAC;AAACtB,GAAA,CAzCWF,aAAa;AAAAyB,EAAA,GAAbzB,aAAa;AAAA,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}