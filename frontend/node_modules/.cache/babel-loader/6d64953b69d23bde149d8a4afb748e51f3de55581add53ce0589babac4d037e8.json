{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\prans\\\\pawsconnect\\\\frontend\\\\src\\\\pages\\\\PawsBot.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useRef } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { useAuth } from '../contexts/AuthContext';\nimport { useTheme } from '../contexts/ThemeContext';\nimport '../styles/pawsbot-chat.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PawsBot = () => {\n  _s();\n  const {\n    user\n  } = useAuth();\n  const {\n    isDarkMode\n  } = useTheme();\n  const navigate = useNavigate();\n  const [messages, setMessages] = useState([]);\n  const [inputMessage, setInputMessage] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const messagesEndRef = useRef(null);\n  const inputRef = useRef(null);\n\n  // Predefined questions for quick access\n  const quickQuestions = [{\n    icon: '🍽️',\n    title: 'Pet Nutrition & Feeding',\n    question: 'What is the best diet for my dog? How often should I feed them?'\n  }, {\n    icon: '🏥',\n    title: 'Health & Wellness',\n    question: 'What are the common signs of illness in pets that I should watch for?'\n  }, {\n    icon: '🎓',\n    title: 'Training & Behavior',\n    question: 'How can I train my puppy to stop biting and follow basic commands?'\n  }, {\n    icon: '🐕',\n    title: 'Dog Care Tips',\n    question: 'What are the essential grooming needs for dogs?'\n  }, {\n    icon: '🐱',\n    title: 'Cat Care Tips',\n    question: 'Why is my cat not using the litter box and how can I fix it?'\n  }, {\n    icon: '💉',\n    title: 'Vaccinations & Vet Visits',\n    question: 'What vaccinations does my pet need and how often should I visit the vet?'\n  }];\n  useEffect(() => {\n    // Check if user is logged in\n    if (!user) {\n      navigate('/login', {\n        state: {\n          from: '/pawsbot',\n          message: 'Please log in to use PawsBot'\n        }\n      });\n      return;\n    }\n\n    // Initial welcome message\n    setMessages([{\n      id: Date.now(),\n      type: 'bot',\n      content: `Hi ${user.username}! 👋 I'm PawsBot, your AI pet care assistant. Ask me anything about your furry friends!`,\n      timestamp: new Date()\n    }]);\n\n    // Check if Botpress is already loaded\n    if (window.botpressWebChat) {\n      console.log('Botpress already loaded');\n      const bpWidget = document.getElementById('bp-web-widget-container');\n      if (bpWidget) {\n        bpWidget.style.display = 'none';\n      }\n      return;\n    }\n\n    // Load Botpress scripts\n    const script1 = document.createElement('script');\n    script1.src = 'https://cdn.botpress.cloud/webchat/v3.3/inject.js';\n    script1.async = true;\n    const script2 = document.createElement('script');\n    script2.src = 'https://files.bpcontent.cloud/2025/10/01/08/20251001082958-80TU2NR9.js';\n    script2.defer = true;\n    let botpressReady = false;\n    script1.onload = () => {\n      console.log('Botpress inject.js loaded');\n    };\n    script2.onload = () => {\n      console.log('Botpress config loaded');\n      botpressReady = true;\n\n      // Wait for Botpress to initialize - it auto-initializes after script loads\n      setTimeout(() => {\n        const bpWidget = document.getElementById('bp-web-widget-container');\n        if (bpWidget) {\n          bpWidget.style.display = 'none';\n          console.log('Botpress widget hidden');\n        } else {\n          console.log('Botpress widget not found yet, will hide on first use');\n        }\n      }, 2000);\n    };\n    script1.onerror = () => {\n      console.error('Failed to load Botpress inject.js');\n    };\n    script2.onerror = () => {\n      console.error('Failed to load Botpress config');\n    };\n    document.body.appendChild(script1);\n    document.body.appendChild(script2);\n    return () => {\n      if (document.body.contains(script1)) document.body.removeChild(script1);\n      if (document.body.contains(script2)) document.body.removeChild(script2);\n    };\n  }, [user, navigate]);\n\n  // Scroll to bottom when messages change\n  useEffect(() => {\n    var _messagesEndRef$curre;\n    (_messagesEndRef$curre = messagesEndRef.current) === null || _messagesEndRef$curre === void 0 ? void 0 : _messagesEndRef$curre.scrollIntoView({\n      behavior: 'smooth'\n    });\n  }, [messages]);\n\n  // Handle quick question click\n  const handleQuickQuestion = question => {\n    var _inputRef$current;\n    setInputMessage(question);\n    (_inputRef$current = inputRef.current) === null || _inputRef$current === void 0 ? void 0 : _inputRef$current.focus();\n  };\n\n  // Send message to Botpress\n  const sendMessage = async e => {\n    e === null || e === void 0 ? void 0 : e.preventDefault();\n    if (!inputMessage.trim() || isLoading) return;\n    const userMessage = {\n      id: Date.now(),\n      type: 'user',\n      content: inputMessage,\n      timestamp: new Date()\n    };\n    setMessages(prev => [...prev, userMessage]);\n    const currentMessage = inputMessage;\n    setInputMessage('');\n    setIsLoading(true);\n    try {\n      // Since Botpress widget auto-loads, we'll open it programmatically\n      const bpWidget = document.getElementById('bp-web-widget-container');\n      if (bpWidget) {\n        console.log('Opening Botpress widget to send message');\n\n        // Make widget visible temporarily\n        bpWidget.style.display = 'block';\n        bpWidget.style.position = 'fixed';\n        bpWidget.style.bottom = '20px';\n        bpWidget.style.right = '20px';\n        bpWidget.style.zIndex = '9999';\n\n        // Try to click the widget to open it\n        setTimeout(() => {\n          const openButton = bpWidget.querySelector('button, [role=\"button\"]');\n          if (openButton) {\n            openButton.click();\n            console.log('Clicked Botpress open button');\n\n            // Wait for chat to open, then try to input message\n            setTimeout(() => {\n              const inputField = document.querySelector('textarea[placeholder*=\"Message\"], input[type=\"text\"]');\n              if (inputField) {\n                inputField.value = currentMessage;\n                inputField.dispatchEvent(new Event('input', {\n                  bubbles: true\n                }));\n\n                // Find and click send button\n                setTimeout(() => {\n                  const sendBtn = document.querySelector('button[type=\"submit\"], button[aria-label*=\"Send\"]');\n                  if (sendBtn) {\n                    sendBtn.click();\n                    console.log('Message sent to Botpress');\n\n                    // Listen for response\n                    setTimeout(() => {\n                      const botMessages = document.querySelectorAll('[class*=\"from-bot\"], [class*=\"bot-message\"]');\n                      if (botMessages.length > 0) {\n                        const lastMsg = botMessages[botMessages.length - 1];\n                        const botMessage = {\n                          id: Date.now() + 1,\n                          type: 'bot',\n                          content: lastMsg.textContent.trim() || 'Response received',\n                          timestamp: new Date()\n                        };\n                        setMessages(prev => [...prev, botMessage]);\n                      } else {\n                        // Generic response if can't capture\n                        const botMessage = {\n                          id: Date.now() + 1,\n                          type: 'bot',\n                          content: 'I\\'m processing your question. Please check the Botpress chat widget in the bottom right for the full response.',\n                          timestamp: new Date()\n                        };\n                        setMessages(prev => [...prev, botMessage]);\n                      }\n                      setIsLoading(false);\n\n                      // Hide widget after getting response\n                      setTimeout(() => {\n                        bpWidget.style.display = 'none';\n                      }, 1000);\n                    }, 2000);\n                  }\n                }, 500);\n              }\n            }, 1000);\n          }\n        }, 500);\n      } else {\n        // Widget not found - show it to user\n        console.warn('Botpress widget not found');\n        const botMessage = {\n          id: Date.now() + 1,\n          type: 'bot',\n          content: 'The Botpress chat widget should appear in the bottom right corner. Please click it to chat with me!',\n          timestamp: new Date()\n        };\n        setMessages(prev => [...prev, botMessage]);\n        setIsLoading(false);\n      }\n    } catch (error) {\n      console.error('Error in sendMessage:', error);\n      const errorMessage = {\n        id: Date.now() + 1,\n        type: 'bot',\n        content: 'Sorry, I encountered an error. The Botpress chat widget should appear in the bottom right - please use that to chat with me.',\n        timestamp: new Date()\n      };\n      setMessages(prev => [...prev, errorMessage]);\n      setIsLoading(false);\n    }\n  };\n\n  // Handle Enter key\n  const handleKeyPress = e => {\n    if (e.key === 'Enter' && !e.shiftKey) {\n      e.preventDefault();\n      sendMessage();\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"pawsbot-chat-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"pawsbot-chat-header\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header-content\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"header-left\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"bot-avatar\",\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"bot-icon\",\n              children: \"\\uD83E\\uDD16\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 262,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 261,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"header-info\",\n            children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n              className: \"bot-title\",\n              children: \"PawsBot AI Assistant\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 265,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"bot-subtitle\",\n              children: \"Your AI companion for pet care advice\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 266,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 264,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 260,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 259,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 258,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"pawsbot-chat-main\",\n      children: messages.length === 1 ?\n      /*#__PURE__*/\n      /* Welcome Screen with Quick Questions */\n      _jsxDEV(\"div\", {\n        className: \"welcome-screen\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"welcome-content\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"welcome-icon\",\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"\\uD83D\\uDC3E\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 279,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 278,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"welcome-title\",\n            children: \"Welcome to PawsCare AI!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 281,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"welcome-text\",\n            children: \"Ask me anything about your pet's health, behavior, training, or general care.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 282,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"quick-questions-grid\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"quick-questions-label\",\n              children: \"Try asking me about:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 287,\n              columnNumber: 17\n            }, this), quickQuestions.map((item, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"quick-question-card\",\n              onClick: () => handleQuickQuestion(item.question),\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"quick-question-icon\",\n                children: item.icon\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 294,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"quick-question-title\",\n                children: item.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 295,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"quick-question-preview\",\n                children: item.question\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 296,\n                columnNumber: 21\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 289,\n              columnNumber: 19\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 286,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 277,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 276,\n        columnNumber: 11\n      }, this) :\n      /*#__PURE__*/\n      /* Chat Messages */\n      _jsxDEV(\"div\", {\n        className: \"chat-messages\",\n        children: [messages.map(message => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `message-wrapper ${message.type === 'user' ? 'user-message' : 'bot-message'}`,\n          children: [message.type === 'bot' && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"message-avatar\",\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"avatar-icon\",\n              children: \"\\uD83E\\uDD16\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 312,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 311,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"message-content\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"message-bubble\",\n              children: /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"message-text\",\n                children: message.content\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 317,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 316,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"message-time\",\n              children: message.timestamp.toLocaleTimeString([], {\n                hour: '2-digit',\n                minute: '2-digit'\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 319,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 315,\n            columnNumber: 17\n          }, this), message.type === 'user' && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"message-avatar user-avatar\",\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"avatar-icon\",\n              children: \"\\uD83D\\uDC64\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 325,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 324,\n            columnNumber: 19\n          }, this)]\n        }, message.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 306,\n          columnNumber: 15\n        }, this)), isLoading && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"message-wrapper bot-message\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"message-avatar\",\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"avatar-icon\",\n              children: \"\\uD83E\\uDD16\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 334,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 333,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"message-content\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"message-bubble typing-indicator\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 338,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 339,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 340,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 337,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 336,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 332,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          ref: messagesEndRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 346,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 304,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 273,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"pawsbot-chat-input\",\n      children: [/*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: sendMessage,\n        className: \"input-form\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-wrapper\",\n          children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n            ref: inputRef,\n            value: inputMessage,\n            onChange: e => setInputMessage(e.target.value),\n            onKeyPress: handleKeyPress,\n            placeholder: \"Ask anything about your pet...\",\n            className: \"chat-input\",\n            rows: \"1\",\n            disabled: isLoading\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 355,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            className: \"send-button\",\n            disabled: !inputMessage.trim() || isLoading,\n            children: /*#__PURE__*/_jsxDEV(\"svg\", {\n              width: \"20\",\n              height: \"20\",\n              viewBox: \"0 0 24 24\",\n              fill: \"none\",\n              stroke: \"currentColor\",\n              strokeWidth: \"2\",\n              children: [/*#__PURE__*/_jsxDEV(\"line\", {\n                x1: \"22\",\n                y1: \"2\",\n                x2: \"11\",\n                y2: \"13\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 371,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"polygon\", {\n                points: \"22 2 15 22 11 13 2 9 22 2\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 372,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 370,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 365,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 354,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 353,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"input-disclaimer\",\n        children: \"PawsBot can make mistakes. Always consult with a veterinarian for serious health concerns.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 377,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 352,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 256,\n    columnNumber: 5\n  }, this);\n};\n_s(PawsBot, \"wgp8CN4rYZVxUbCC5w9QKIz5o0c=\", false, function () {\n  return [useAuth, useTheme, useNavigate];\n});\n_c = PawsBot;\nexport default PawsBot;\nvar _c;\n$RefreshReg$(_c, \"PawsBot\");","map":{"version":3,"names":["React","useEffect","useState","useRef","useNavigate","useAuth","useTheme","jsxDEV","_jsxDEV","PawsBot","_s","user","isDarkMode","navigate","messages","setMessages","inputMessage","setInputMessage","isLoading","setIsLoading","messagesEndRef","inputRef","quickQuestions","icon","title","question","state","from","message","id","Date","now","type","content","username","timestamp","window","botpressWebChat","console","log","bpWidget","document","getElementById","style","display","script1","createElement","src","async","script2","defer","botpressReady","onload","setTimeout","onerror","error","body","appendChild","contains","removeChild","_messagesEndRef$curre","current","scrollIntoView","behavior","handleQuickQuestion","_inputRef$current","focus","sendMessage","e","preventDefault","trim","userMessage","prev","currentMessage","position","bottom","right","zIndex","openButton","querySelector","click","inputField","value","dispatchEvent","Event","bubbles","sendBtn","botMessages","querySelectorAll","length","lastMsg","botMessage","textContent","warn","errorMessage","handleKeyPress","key","shiftKey","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","item","index","onClick","toLocaleTimeString","hour","minute","ref","onSubmit","onChange","target","onKeyPress","placeholder","rows","disabled","width","height","viewBox","fill","stroke","strokeWidth","x1","y1","x2","y2","points","_c","$RefreshReg$"],"sources":["C:/Users/prans/pawsconnect/frontend/src/pages/PawsBot.js"],"sourcesContent":["import React, { useEffect, useState, useRef } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { useAuth } from '../contexts/AuthContext';\r\nimport { useTheme } from '../contexts/ThemeContext';\r\nimport '../styles/pawsbot-chat.css';\r\n\r\nconst PawsBot = () => {\r\n  const { user } = useAuth();\r\n  const { isDarkMode } = useTheme();\r\n  const navigate = useNavigate();\r\n  const [messages, setMessages] = useState([]);\r\n  const [inputMessage, setInputMessage] = useState('');\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const messagesEndRef = useRef(null);\r\n  const inputRef = useRef(null);\r\n\r\n  // Predefined questions for quick access\r\n  const quickQuestions = [\r\n    {\r\n      icon: '🍽️',\r\n      title: 'Pet Nutrition & Feeding',\r\n      question: 'What is the best diet for my dog? How often should I feed them?'\r\n    },\r\n    {\r\n      icon: '🏥',\r\n      title: 'Health & Wellness',\r\n      question: 'What are the common signs of illness in pets that I should watch for?'\r\n    },\r\n    {\r\n      icon: '🎓',\r\n      title: 'Training & Behavior',\r\n      question: 'How can I train my puppy to stop biting and follow basic commands?'\r\n    },\r\n    {\r\n      icon: '🐕',\r\n      title: 'Dog Care Tips',\r\n      question: 'What are the essential grooming needs for dogs?'\r\n    },\r\n    {\r\n      icon: '🐱',\r\n      title: 'Cat Care Tips',\r\n      question: 'Why is my cat not using the litter box and how can I fix it?'\r\n    },\r\n    {\r\n      icon: '💉',\r\n      title: 'Vaccinations & Vet Visits',\r\n      question: 'What vaccinations does my pet need and how often should I visit the vet?'\r\n    }\r\n  ];\r\n\r\n  useEffect(() => {\r\n    // Check if user is logged in\r\n    if (!user) {\r\n      navigate('/login', { state: { from: '/pawsbot', message: 'Please log in to use PawsBot' } });\r\n      return;\r\n    }\r\n\r\n    // Initial welcome message\r\n    setMessages([{\r\n      id: Date.now(),\r\n      type: 'bot',\r\n      content: `Hi ${user.username}! 👋 I'm PawsBot, your AI pet care assistant. Ask me anything about your furry friends!`,\r\n      timestamp: new Date()\r\n    }]);\r\n\r\n    // Check if Botpress is already loaded\r\n    if (window.botpressWebChat) {\r\n      console.log('Botpress already loaded');\r\n      const bpWidget = document.getElementById('bp-web-widget-container');\r\n      if (bpWidget) {\r\n        bpWidget.style.display = 'none';\r\n      }\r\n      return;\r\n    }\r\n\r\n    // Load Botpress scripts\r\n    const script1 = document.createElement('script');\r\n    script1.src = 'https://cdn.botpress.cloud/webchat/v3.3/inject.js';\r\n    script1.async = true;\r\n    \r\n    const script2 = document.createElement('script');\r\n    script2.src = 'https://files.bpcontent.cloud/2025/10/01/08/20251001082958-80TU2NR9.js';\r\n    script2.defer = true;\r\n\r\n    let botpressReady = false;\r\n\r\n    script1.onload = () => {\r\n      console.log('Botpress inject.js loaded');\r\n    };\r\n\r\n    script2.onload = () => {\r\n      console.log('Botpress config loaded');\r\n      botpressReady = true;\r\n      \r\n      // Wait for Botpress to initialize - it auto-initializes after script loads\r\n      setTimeout(() => {\r\n        const bpWidget = document.getElementById('bp-web-widget-container');\r\n        if (bpWidget) {\r\n          bpWidget.style.display = 'none';\r\n          console.log('Botpress widget hidden');\r\n        } else {\r\n          console.log('Botpress widget not found yet, will hide on first use');\r\n        }\r\n      }, 2000);\r\n    };\r\n\r\n    script1.onerror = () => {\r\n      console.error('Failed to load Botpress inject.js');\r\n    };\r\n\r\n    script2.onerror = () => {\r\n      console.error('Failed to load Botpress config');\r\n    };\r\n\r\n    document.body.appendChild(script1);\r\n    document.body.appendChild(script2);\r\n\r\n    return () => {\r\n      if (document.body.contains(script1)) document.body.removeChild(script1);\r\n      if (document.body.contains(script2)) document.body.removeChild(script2);\r\n    };\r\n  }, [user, navigate]);\r\n\r\n  // Scroll to bottom when messages change\r\n  useEffect(() => {\r\n    messagesEndRef.current?.scrollIntoView({ behavior: 'smooth' });\r\n  }, [messages]);\r\n\r\n  // Handle quick question click\r\n  const handleQuickQuestion = (question) => {\r\n    setInputMessage(question);\r\n    inputRef.current?.focus();\r\n  };\r\n\r\n  // Send message to Botpress\r\n  const sendMessage = async (e) => {\r\n    e?.preventDefault();\r\n    if (!inputMessage.trim() || isLoading) return;\r\n\r\n    const userMessage = {\r\n      id: Date.now(),\r\n      type: 'user',\r\n      content: inputMessage,\r\n      timestamp: new Date()\r\n    };\r\n\r\n    setMessages(prev => [...prev, userMessage]);\r\n    const currentMessage = inputMessage;\r\n    setInputMessage('');\r\n    setIsLoading(true);\r\n\r\n    try {\r\n      // Since Botpress widget auto-loads, we'll open it programmatically\r\n      const bpWidget = document.getElementById('bp-web-widget-container');\r\n      \r\n      if (bpWidget) {\r\n        console.log('Opening Botpress widget to send message');\r\n        \r\n        // Make widget visible temporarily\r\n        bpWidget.style.display = 'block';\r\n        bpWidget.style.position = 'fixed';\r\n        bpWidget.style.bottom = '20px';\r\n        bpWidget.style.right = '20px';\r\n        bpWidget.style.zIndex = '9999';\r\n        \r\n        // Try to click the widget to open it\r\n        setTimeout(() => {\r\n          const openButton = bpWidget.querySelector('button, [role=\"button\"]');\r\n          if (openButton) {\r\n            openButton.click();\r\n            console.log('Clicked Botpress open button');\r\n            \r\n            // Wait for chat to open, then try to input message\r\n            setTimeout(() => {\r\n              const inputField = document.querySelector('textarea[placeholder*=\"Message\"], input[type=\"text\"]');\r\n              if (inputField) {\r\n                inputField.value = currentMessage;\r\n                inputField.dispatchEvent(new Event('input', { bubbles: true }));\r\n                \r\n                // Find and click send button\r\n                setTimeout(() => {\r\n                  const sendBtn = document.querySelector('button[type=\"submit\"], button[aria-label*=\"Send\"]');\r\n                  if (sendBtn) {\r\n                    sendBtn.click();\r\n                    console.log('Message sent to Botpress');\r\n                    \r\n                    // Listen for response\r\n                    setTimeout(() => {\r\n                      const botMessages = document.querySelectorAll('[class*=\"from-bot\"], [class*=\"bot-message\"]');\r\n                      if (botMessages.length > 0) {\r\n                        const lastMsg = botMessages[botMessages.length - 1];\r\n                        const botMessage = {\r\n                          id: Date.now() + 1,\r\n                          type: 'bot',\r\n                          content: lastMsg.textContent.trim() || 'Response received',\r\n                          timestamp: new Date()\r\n                        };\r\n                        setMessages(prev => [...prev, botMessage]);\r\n                      } else {\r\n                        // Generic response if can't capture\r\n                        const botMessage = {\r\n                          id: Date.now() + 1,\r\n                          type: 'bot',\r\n                          content: 'I\\'m processing your question. Please check the Botpress chat widget in the bottom right for the full response.',\r\n                          timestamp: new Date()\r\n                        };\r\n                        setMessages(prev => [...prev, botMessage]);\r\n                      }\r\n                      setIsLoading(false);\r\n                      \r\n                      // Hide widget after getting response\r\n                      setTimeout(() => {\r\n                        bpWidget.style.display = 'none';\r\n                      }, 1000);\r\n                    }, 2000);\r\n                  }\r\n                }, 500);\r\n              }\r\n            }, 1000);\r\n          }\r\n        }, 500);\r\n      } else {\r\n        // Widget not found - show it to user\r\n        console.warn('Botpress widget not found');\r\n        const botMessage = {\r\n          id: Date.now() + 1,\r\n          type: 'bot',\r\n          content: 'The Botpress chat widget should appear in the bottom right corner. Please click it to chat with me!',\r\n          timestamp: new Date()\r\n        };\r\n        setMessages(prev => [...prev, botMessage]);\r\n        setIsLoading(false);\r\n      }\r\n    } catch (error) {\r\n      console.error('Error in sendMessage:', error);\r\n      const errorMessage = {\r\n        id: Date.now() + 1,\r\n        type: 'bot',\r\n        content: 'Sorry, I encountered an error. The Botpress chat widget should appear in the bottom right - please use that to chat with me.',\r\n        timestamp: new Date()\r\n      };\r\n      setMessages(prev => [...prev, errorMessage]);\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  // Handle Enter key\r\n  const handleKeyPress = (e) => {\r\n    if (e.key === 'Enter' && !e.shiftKey) {\r\n      e.preventDefault();\r\n      sendMessage();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"pawsbot-chat-container\">\r\n      {/* Header */}\r\n      <div className=\"pawsbot-chat-header\">\r\n        <div className=\"header-content\">\r\n          <div className=\"header-left\">\r\n            <div className=\"bot-avatar\">\r\n              <span className=\"bot-icon\">🤖</span>\r\n            </div>\r\n            <div className=\"header-info\">\r\n              <h1 className=\"bot-title\">PawsBot AI Assistant</h1>\r\n              <p className=\"bot-subtitle\">Your AI companion for pet care advice</p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Main Chat Area */}\r\n      <div className=\"pawsbot-chat-main\">\r\n        {messages.length === 1 ? (\r\n          /* Welcome Screen with Quick Questions */\r\n          <div className=\"welcome-screen\">\r\n            <div className=\"welcome-content\">\r\n              <div className=\"welcome-icon\">\r\n                <span>🐾</span>\r\n              </div>\r\n              <h2 className=\"welcome-title\">Welcome to PawsCare AI!</h2>\r\n              <p className=\"welcome-text\">\r\n                Ask me anything about your pet's health, behavior, training, or general care.\r\n              </p>\r\n              \r\n              <div className=\"quick-questions-grid\">\r\n                <p className=\"quick-questions-label\">Try asking me about:</p>\r\n                {quickQuestions.map((item, index) => (\r\n                  <button\r\n                    key={index}\r\n                    className=\"quick-question-card\"\r\n                    onClick={() => handleQuickQuestion(item.question)}\r\n                  >\r\n                    <span className=\"quick-question-icon\">{item.icon}</span>\r\n                    <span className=\"quick-question-title\">{item.title}</span>\r\n                    <span className=\"quick-question-preview\">{item.question}</span>\r\n                  </button>\r\n                ))}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        ) : (\r\n          /* Chat Messages */\r\n          <div className=\"chat-messages\">\r\n            {messages.map((message) => (\r\n              <div\r\n                key={message.id}\r\n                className={`message-wrapper ${message.type === 'user' ? 'user-message' : 'bot-message'}`}\r\n              >\r\n                {message.type === 'bot' && (\r\n                  <div className=\"message-avatar\">\r\n                    <span className=\"avatar-icon\">🤖</span>\r\n                  </div>\r\n                )}\r\n                <div className=\"message-content\">\r\n                  <div className=\"message-bubble\">\r\n                    <p className=\"message-text\">{message.content}</p>\r\n                  </div>\r\n                  <span className=\"message-time\">\r\n                    {message.timestamp.toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' })}\r\n                  </span>\r\n                </div>\r\n                {message.type === 'user' && (\r\n                  <div className=\"message-avatar user-avatar\">\r\n                    <span className=\"avatar-icon\">👤</span>\r\n                  </div>\r\n                )}\r\n              </div>\r\n            ))}\r\n            \r\n            {isLoading && (\r\n              <div className=\"message-wrapper bot-message\">\r\n                <div className=\"message-avatar\">\r\n                  <span className=\"avatar-icon\">🤖</span>\r\n                </div>\r\n                <div className=\"message-content\">\r\n                  <div className=\"message-bubble typing-indicator\">\r\n                    <span></span>\r\n                    <span></span>\r\n                    <span></span>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            )}\r\n            \r\n            <div ref={messagesEndRef} />\r\n          </div>\r\n        )}\r\n      </div>\r\n\r\n      {/* Input Area */}\r\n      <div className=\"pawsbot-chat-input\">\r\n        <form onSubmit={sendMessage} className=\"input-form\">\r\n          <div className=\"input-wrapper\">\r\n            <textarea\r\n              ref={inputRef}\r\n              value={inputMessage}\r\n              onChange={(e) => setInputMessage(e.target.value)}\r\n              onKeyPress={handleKeyPress}\r\n              placeholder=\"Ask anything about your pet...\"\r\n              className=\"chat-input\"\r\n              rows=\"1\"\r\n              disabled={isLoading}\r\n            />\r\n            <button\r\n              type=\"submit\"\r\n              className=\"send-button\"\r\n              disabled={!inputMessage.trim() || isLoading}\r\n            >\r\n              <svg width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\">\r\n                <line x1=\"22\" y1=\"2\" x2=\"11\" y2=\"13\"></line>\r\n                <polygon points=\"22 2 15 22 11 13 2 9 22 2\"></polygon>\r\n              </svg>\r\n            </button>\r\n          </div>\r\n        </form>\r\n        <p className=\"input-disclaimer\">\r\n          PawsBot can make mistakes. Always consult with a veterinarian for serious health concerns.\r\n        </p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PawsBot;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}