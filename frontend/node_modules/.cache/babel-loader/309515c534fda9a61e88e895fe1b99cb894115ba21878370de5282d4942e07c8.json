{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\prans\\\\pawsconnect\\\\frontend\\\\src\\\\pages\\\\PawsBot.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useRef } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { useAuth } from '../contexts/AuthContext';\nimport { useTheme } from '../contexts/ThemeContext';\nimport '../styles/pawsbot-chat.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PawsBot = () => {\n  _s();\n  const {\n    user\n  } = useAuth();\n  const {\n    isDarkMode\n  } = useTheme();\n  const navigate = useNavigate();\n  const [messages, setMessages] = useState([]);\n  const [inputMessage, setInputMessage] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const messagesEndRef = useRef(null);\n  const inputRef = useRef(null);\n\n  // Predefined questions for quick access\n  const quickQuestions = [{\n    icon: '🍽️',\n    title: 'Pet Nutrition & Feeding',\n    question: 'What is the best diet for my dog? How often should I feed them?'\n  }, {\n    icon: '🏥',\n    title: 'Health & Wellness',\n    question: 'What are the common signs of illness in pets that I should watch for?'\n  }, {\n    icon: '🎓',\n    title: 'Training & Behavior',\n    question: 'How can I train my puppy to stop biting and follow basic commands?'\n  }, {\n    icon: '🐕',\n    title: 'Dog Care Tips',\n    question: 'What are the essential grooming needs for dogs?'\n  }, {\n    icon: '🐱',\n    title: 'Cat Care Tips',\n    question: 'Why is my cat not using the litter box and how can I fix it?'\n  }, {\n    icon: '💉',\n    title: 'Vaccinations & Vet Visits',\n    question: 'What vaccinations does my pet need and how often should I visit the vet?'\n  }];\n  useEffect(() => {\n    // Check if user is logged in\n    if (!user) {\n      navigate('/login', {\n        state: {\n          from: '/pawsbot',\n          message: 'Please log in to use PawsBot'\n        }\n      });\n      return;\n    }\n\n    // Initial welcome message\n    setMessages([{\n      id: Date.now(),\n      type: 'bot',\n      content: `Hi ${user.username}! 👋 I'm PawsBot, your AI pet care assistant. Ask me anything about your furry friends!`,\n      timestamp: new Date()\n    }]);\n\n    // Check if Botpress is already loaded\n    if (window.botpressWebChat) {\n      console.log('Botpress already loaded');\n      const bpWidget = document.getElementById('bp-web-widget-container');\n      if (bpWidget) {\n        bpWidget.style.display = 'none';\n      }\n      return;\n    }\n\n    // Load Botpress with client ID - use the embed script directly\n    const script = document.createElement('script');\n    script.src = 'https://cdn.botpress.cloud/webchat/v2.2/inject.js';\n    script.async = true;\n    script.onload = () => {\n      console.log('Botpress script loaded');\n\n      // Wait for botpressWebChat to be available\n      const initBotpress = () => {\n        if (window.botpressWebChat && typeof window.botpressWebChat.init === 'function') {\n          console.log('Initializing Botpress...');\n          try {\n            window.botpressWebChat.init({\n              botId: 'f540c4a7-c98e-44f5-bc83-752633f03bbf',\n              hostUrl: 'https://cdn.botpress.cloud/webchat/v2.2',\n              messagingUrl: 'https://messaging.botpress.cloud',\n              clientId: 'f540c4a7-c98e-44f5-bc83-752633f03bbf',\n              lazySocket: true,\n              botName: 'PawsBot',\n              showPoweredBy: false,\n              theme: isDarkMode ? 'dark' : 'light',\n              containerWidth: '360px',\n              layoutWidth: '360px',\n              hideWidget: false,\n              closeOnEscape: true,\n              className: 'webchatIframe',\n              containerClass: 'bp-widget-container'\n            });\n            console.log('Botpress initialized successfully');\n\n            // Wait for widget to appear\n            setTimeout(() => {\n              const bpWidget = document.querySelector('.bp-widget-container') || document.getElementById('bp-web-widget-container') || document.querySelector('[class*=\"botpress\"]');\n              if (bpWidget) {\n                console.log('Botpress widget found!');\n                bpWidget.style.position = 'fixed';\n                bpWidget.style.bottom = '20px';\n                bpWidget.style.right = '20px';\n                bpWidget.style.zIndex = '9999';\n              }\n            }, 2000);\n          } catch (error) {\n            console.error('Error initializing Botpress:', error);\n          }\n        } else {\n          console.log('Waiting for botpressWebChat...');\n          setTimeout(initBotpress, 100);\n        }\n      };\n\n      // Start initialization\n      setTimeout(initBotpress, 100);\n    };\n    script.onerror = () => {\n      console.error('Failed to load Botpress script');\n    };\n    document.body.appendChild(script);\n    return () => {\n      // Cleanup scripts on unmount\n      const scripts = document.querySelectorAll('script[src*=\"botpress\"]');\n      scripts.forEach(s => {\n        if (document.body.contains(s)) {\n          document.body.removeChild(s);\n        }\n      });\n    };\n  }, [user, navigate]);\n\n  // Scroll to bottom when messages change\n  useEffect(() => {\n    var _messagesEndRef$curre;\n    (_messagesEndRef$curre = messagesEndRef.current) === null || _messagesEndRef$curre === void 0 ? void 0 : _messagesEndRef$curre.scrollIntoView({\n      behavior: 'smooth'\n    });\n  }, [messages]);\n\n  // Handle quick question click\n  const handleQuickQuestion = question => {\n    var _inputRef$current;\n    setInputMessage(question);\n    (_inputRef$current = inputRef.current) === null || _inputRef$current === void 0 ? void 0 : _inputRef$current.focus();\n  };\n\n  // Send message to Botpress\n  const sendMessage = async e => {\n    e === null || e === void 0 ? void 0 : e.preventDefault();\n    if (!inputMessage.trim() || isLoading) return;\n    const userMessage = {\n      id: Date.now(),\n      type: 'user',\n      content: inputMessage,\n      timestamp: new Date()\n    };\n    setMessages(prev => [...prev, userMessage]);\n    const currentMessage = inputMessage;\n    setInputMessage('');\n    setIsLoading(true);\n    try {\n      // Send message to Botpress\n      if (window.botpressWebChat && window.botpressWebChat.sendEvent) {\n        console.log('Sending message to Botpress:', currentMessage);\n\n        // Send the message\n        window.botpressWebChat.sendEvent({\n          type: 'proactive-trigger',\n          channel: 'web',\n          payload: {\n            text: currentMessage\n          }\n        });\n\n        // Listen for response from Botpress\n        let responseReceived = false;\n        let checkCount = 0;\n        const maxChecks = 30; // Check for 15 seconds (30 * 500ms)\n\n        const checkForResponse = setInterval(() => {\n          checkCount++;\n\n          // Look for bot messages in the Botpress iframe\n          const iframe = document.querySelector('iframe[title*=\"Botpress\"], iframe[class*=\"webchat\"]');\n          if (iframe) {\n            try {\n              // Try to access iframe content (may be blocked by CORS)\n              const iframeDoc = iframe.contentDocument || iframe.contentWindow.document;\n              const botMessages = iframeDoc.querySelectorAll('[class*=\"from-bot\"], [class*=\"message-bot\"]');\n              if (botMessages.length > 0) {\n                const lastMsg = botMessages[botMessages.length - 1];\n                const responseText = lastMsg.textContent.trim();\n                if (responseText && responseText !== currentMessage) {\n                  responseReceived = true;\n                  clearInterval(checkForResponse);\n                  const botMessage = {\n                    id: Date.now() + 1,\n                    type: 'bot',\n                    content: responseText,\n                    timestamp: new Date()\n                  };\n                  setMessages(prev => [...prev, botMessage]);\n                  setIsLoading(false);\n                  console.log('Bot response captured:', responseText);\n                }\n              }\n            } catch (e) {\n              // CORS blocked - can't access iframe content\n              console.log('Cannot access iframe content (CORS)');\n            }\n          }\n\n          // Timeout after max checks\n          if (checkCount >= maxChecks && !responseReceived) {\n            clearInterval(checkForResponse);\n            const botMessage = {\n              id: Date.now() + 1,\n              type: 'bot',\n              content: 'I\\'m processing your question! For the full response, please check the chat widget in the bottom right corner. 🤖',\n              timestamp: new Date()\n            };\n            setMessages(prev => [...prev, botMessage]);\n            setIsLoading(false);\n          }\n        }, 500);\n      } else {\n        // Botpress not available\n        console.warn('Botpress WebChat not available');\n        const botMessage = {\n          id: Date.now() + 1,\n          type: 'bot',\n          content: 'Please use the chat widget in the bottom right corner (🤖) to chat with me!',\n          timestamp: new Date()\n        };\n        setMessages(prev => [...prev, botMessage]);\n        setIsLoading(false);\n      }\n    } catch (error) {\n      console.error('Error in sendMessage:', error);\n      const errorMessage = {\n        id: Date.now() + 1,\n        type: 'bot',\n        content: 'Sorry, I encountered an error. Please try using the chat widget in the bottom right corner.',\n        timestamp: new Date()\n      };\n      setMessages(prev => [...prev, errorMessage]);\n      setIsLoading(false);\n    }\n  };\n\n  // Handle Enter key\n  const handleKeyPress = e => {\n    if (e.key === 'Enter' && !e.shiftKey) {\n      e.preventDefault();\n      sendMessage();\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"pawsbot-chat-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"pawsbot-chat-header\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header-content\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"header-left\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"bot-avatar\",\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"bot-icon\",\n              children: \"\\uD83E\\uDD16\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 287,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 286,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"header-info\",\n            children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n              className: \"bot-title\",\n              children: \"PawsBot AI Assistant\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 290,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"bot-subtitle\",\n              children: \"Your AI companion for pet care advice\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 291,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 289,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 285,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 284,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 283,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"pawsbot-chat-main\",\n      children: messages.length === 1 ?\n      /*#__PURE__*/\n      /* Welcome Screen with Quick Questions */\n      _jsxDEV(\"div\", {\n        className: \"welcome-screen\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"welcome-content\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"welcome-icon\",\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"\\uD83D\\uDC3E\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 304,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 303,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"welcome-title\",\n            children: \"Welcome to PawsCare AI!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 306,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"welcome-text\",\n            children: \"Ask me anything about your pet's health, behavior, training, or general care.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 307,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"quick-questions-grid\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"quick-questions-label\",\n              children: \"Try asking me about:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 312,\n              columnNumber: 17\n            }, this), quickQuestions.map((item, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"quick-question-card\",\n              onClick: () => handleQuickQuestion(item.question),\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"quick-question-icon\",\n                children: item.icon\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 319,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"quick-question-title\",\n                children: item.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 320,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"quick-question-preview\",\n                children: item.question\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 321,\n                columnNumber: 21\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 314,\n              columnNumber: 19\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 311,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 302,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 301,\n        columnNumber: 11\n      }, this) :\n      /*#__PURE__*/\n      /* Chat Messages */\n      _jsxDEV(\"div\", {\n        className: \"chat-messages\",\n        children: [messages.map(message => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `message-wrapper ${message.type === 'user' ? 'user-message' : 'bot-message'}`,\n          children: [message.type === 'bot' && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"message-avatar\",\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"avatar-icon\",\n              children: \"\\uD83E\\uDD16\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 337,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 336,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"message-content\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"message-bubble\",\n              children: /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"message-text\",\n                children: message.content\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 342,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 341,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"message-time\",\n              children: message.timestamp.toLocaleTimeString([], {\n                hour: '2-digit',\n                minute: '2-digit'\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 344,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 340,\n            columnNumber: 17\n          }, this), message.type === 'user' && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"message-avatar user-avatar\",\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"avatar-icon\",\n              children: \"\\uD83D\\uDC64\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 350,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 349,\n            columnNumber: 19\n          }, this)]\n        }, message.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 331,\n          columnNumber: 15\n        }, this)), isLoading && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"message-wrapper bot-message\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"message-avatar\",\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"avatar-icon\",\n              children: \"\\uD83E\\uDD16\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 359,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 358,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"message-content\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"message-bubble typing-indicator\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 363,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 364,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 365,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 362,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 361,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 357,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          ref: messagesEndRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 371,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 329,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 298,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"pawsbot-chat-input\",\n      children: [/*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: sendMessage,\n        className: \"input-form\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-wrapper\",\n          children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n            ref: inputRef,\n            value: inputMessage,\n            onChange: e => setInputMessage(e.target.value),\n            onKeyPress: handleKeyPress,\n            placeholder: \"Ask anything about your pet...\",\n            className: \"chat-input\",\n            rows: \"1\",\n            disabled: isLoading\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 380,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            className: \"send-button\",\n            disabled: !inputMessage.trim() || isLoading,\n            children: /*#__PURE__*/_jsxDEV(\"svg\", {\n              width: \"20\",\n              height: \"20\",\n              viewBox: \"0 0 24 24\",\n              fill: \"none\",\n              stroke: \"currentColor\",\n              strokeWidth: \"2\",\n              children: [/*#__PURE__*/_jsxDEV(\"line\", {\n                x1: \"22\",\n                y1: \"2\",\n                x2: \"11\",\n                y2: \"13\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 396,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"polygon\", {\n                points: \"22 2 15 22 11 13 2 9 22 2\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 397,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 395,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 390,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 379,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 378,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"input-disclaimer\",\n        children: \"PawsBot can make mistakes. Always consult with a veterinarian for serious health concerns.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 402,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 377,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 281,\n    columnNumber: 5\n  }, this);\n};\n_s(PawsBot, \"wgp8CN4rYZVxUbCC5w9QKIz5o0c=\", false, function () {\n  return [useAuth, useTheme, useNavigate];\n});\n_c = PawsBot;\nexport default PawsBot;\nvar _c;\n$RefreshReg$(_c, \"PawsBot\");","map":{"version":3,"names":["React","useEffect","useState","useRef","useNavigate","useAuth","useTheme","jsxDEV","_jsxDEV","PawsBot","_s","user","isDarkMode","navigate","messages","setMessages","inputMessage","setInputMessage","isLoading","setIsLoading","messagesEndRef","inputRef","quickQuestions","icon","title","question","state","from","message","id","Date","now","type","content","username","timestamp","window","botpressWebChat","console","log","bpWidget","document","getElementById","style","display","script","createElement","src","async","onload","initBotpress","init","botId","hostUrl","messagingUrl","clientId","lazySocket","botName","showPoweredBy","theme","containerWidth","layoutWidth","hideWidget","closeOnEscape","className","containerClass","setTimeout","querySelector","position","bottom","right","zIndex","error","onerror","body","appendChild","scripts","querySelectorAll","forEach","s","contains","removeChild","_messagesEndRef$curre","current","scrollIntoView","behavior","handleQuickQuestion","_inputRef$current","focus","sendMessage","e","preventDefault","trim","userMessage","prev","currentMessage","sendEvent","channel","payload","text","responseReceived","checkCount","maxChecks","checkForResponse","setInterval","iframe","iframeDoc","contentDocument","contentWindow","botMessages","length","lastMsg","responseText","textContent","clearInterval","botMessage","warn","errorMessage","handleKeyPress","key","shiftKey","children","fileName","_jsxFileName","lineNumber","columnNumber","map","item","index","onClick","toLocaleTimeString","hour","minute","ref","onSubmit","value","onChange","target","onKeyPress","placeholder","rows","disabled","width","height","viewBox","fill","stroke","strokeWidth","x1","y1","x2","y2","points","_c","$RefreshReg$"],"sources":["C:/Users/prans/pawsconnect/frontend/src/pages/PawsBot.js"],"sourcesContent":["import React, { useEffect, useState, useRef } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { useAuth } from '../contexts/AuthContext';\r\nimport { useTheme } from '../contexts/ThemeContext';\r\nimport '../styles/pawsbot-chat.css';\r\n\r\nconst PawsBot = () => {\r\n  const { user } = useAuth();\r\n  const { isDarkMode } = useTheme();\r\n  const navigate = useNavigate();\r\n  const [messages, setMessages] = useState([]);\r\n  const [inputMessage, setInputMessage] = useState('');\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const messagesEndRef = useRef(null);\r\n  const inputRef = useRef(null);\r\n\r\n  // Predefined questions for quick access\r\n  const quickQuestions = [\r\n    {\r\n      icon: '🍽️',\r\n      title: 'Pet Nutrition & Feeding',\r\n      question: 'What is the best diet for my dog? How often should I feed them?'\r\n    },\r\n    {\r\n      icon: '🏥',\r\n      title: 'Health & Wellness',\r\n      question: 'What are the common signs of illness in pets that I should watch for?'\r\n    },\r\n    {\r\n      icon: '🎓',\r\n      title: 'Training & Behavior',\r\n      question: 'How can I train my puppy to stop biting and follow basic commands?'\r\n    },\r\n    {\r\n      icon: '🐕',\r\n      title: 'Dog Care Tips',\r\n      question: 'What are the essential grooming needs for dogs?'\r\n    },\r\n    {\r\n      icon: '🐱',\r\n      title: 'Cat Care Tips',\r\n      question: 'Why is my cat not using the litter box and how can I fix it?'\r\n    },\r\n    {\r\n      icon: '💉',\r\n      title: 'Vaccinations & Vet Visits',\r\n      question: 'What vaccinations does my pet need and how often should I visit the vet?'\r\n    }\r\n  ];\r\n\r\n  useEffect(() => {\r\n    // Check if user is logged in\r\n    if (!user) {\r\n      navigate('/login', { state: { from: '/pawsbot', message: 'Please log in to use PawsBot' } });\r\n      return;\r\n    }\r\n\r\n    // Initial welcome message\r\n    setMessages([{\r\n      id: Date.now(),\r\n      type: 'bot',\r\n      content: `Hi ${user.username}! 👋 I'm PawsBot, your AI pet care assistant. Ask me anything about your furry friends!`,\r\n      timestamp: new Date()\r\n    }]);\r\n\r\n    // Check if Botpress is already loaded\r\n    if (window.botpressWebChat) {\r\n      console.log('Botpress already loaded');\r\n      const bpWidget = document.getElementById('bp-web-widget-container');\r\n      if (bpWidget) {\r\n        bpWidget.style.display = 'none';\r\n      }\r\n      return;\r\n    }\r\n\r\n    // Load Botpress with client ID - use the embed script directly\r\n    const script = document.createElement('script');\r\n    script.src = 'https://cdn.botpress.cloud/webchat/v2.2/inject.js';\r\n    script.async = true;\r\n    \r\n    script.onload = () => {\r\n      console.log('Botpress script loaded');\r\n      \r\n      // Wait for botpressWebChat to be available\r\n      const initBotpress = () => {\r\n        if (window.botpressWebChat && typeof window.botpressWebChat.init === 'function') {\r\n          console.log('Initializing Botpress...');\r\n          \r\n          try {\r\n            window.botpressWebChat.init({\r\n              botId: 'f540c4a7-c98e-44f5-bc83-752633f03bbf',\r\n              hostUrl: 'https://cdn.botpress.cloud/webchat/v2.2',\r\n              messagingUrl: 'https://messaging.botpress.cloud',\r\n              clientId: 'f540c4a7-c98e-44f5-bc83-752633f03bbf',\r\n              lazySocket: true,\r\n              botName: 'PawsBot',\r\n              showPoweredBy: false,\r\n              theme: isDarkMode ? 'dark' : 'light',\r\n              containerWidth: '360px',\r\n              layoutWidth: '360px',\r\n              hideWidget: false,\r\n              closeOnEscape: true,\r\n              className: 'webchatIframe',\r\n              containerClass: 'bp-widget-container'\r\n            });\r\n            \r\n            console.log('Botpress initialized successfully');\r\n            \r\n            // Wait for widget to appear\r\n            setTimeout(() => {\r\n              const bpWidget = document.querySelector('.bp-widget-container') || \r\n                              document.getElementById('bp-web-widget-container') ||\r\n                              document.querySelector('[class*=\"botpress\"]');\r\n              if (bpWidget) {\r\n                console.log('Botpress widget found!');\r\n                bpWidget.style.position = 'fixed';\r\n                bpWidget.style.bottom = '20px';\r\n                bpWidget.style.right = '20px';\r\n                bpWidget.style.zIndex = '9999';\r\n              }\r\n            }, 2000);\r\n          } catch (error) {\r\n            console.error('Error initializing Botpress:', error);\r\n          }\r\n        } else {\r\n          console.log('Waiting for botpressWebChat...');\r\n          setTimeout(initBotpress, 100);\r\n        }\r\n      };\r\n      \r\n      // Start initialization\r\n      setTimeout(initBotpress, 100);\r\n    };\r\n\r\n    script.onerror = () => {\r\n      console.error('Failed to load Botpress script');\r\n    };\r\n\r\n    document.body.appendChild(script);\r\n\r\n    return () => {\r\n      // Cleanup scripts on unmount\r\n      const scripts = document.querySelectorAll('script[src*=\"botpress\"]');\r\n      scripts.forEach(s => {\r\n        if (document.body.contains(s)) {\r\n          document.body.removeChild(s);\r\n        }\r\n      });\r\n    };\r\n  }, [user, navigate]);\r\n\r\n  // Scroll to bottom when messages change\r\n  useEffect(() => {\r\n    messagesEndRef.current?.scrollIntoView({ behavior: 'smooth' });\r\n  }, [messages]);\r\n\r\n  // Handle quick question click\r\n  const handleQuickQuestion = (question) => {\r\n    setInputMessage(question);\r\n    inputRef.current?.focus();\r\n  };\r\n\r\n  // Send message to Botpress\r\n  const sendMessage = async (e) => {\r\n    e?.preventDefault();\r\n    if (!inputMessage.trim() || isLoading) return;\r\n\r\n    const userMessage = {\r\n      id: Date.now(),\r\n      type: 'user',\r\n      content: inputMessage,\r\n      timestamp: new Date()\r\n    };\r\n\r\n    setMessages(prev => [...prev, userMessage]);\r\n    const currentMessage = inputMessage;\r\n    setInputMessage('');\r\n    setIsLoading(true);\r\n\r\n    try {\r\n      // Send message to Botpress\r\n      if (window.botpressWebChat && window.botpressWebChat.sendEvent) {\r\n        console.log('Sending message to Botpress:', currentMessage);\r\n        \r\n        // Send the message\r\n        window.botpressWebChat.sendEvent({\r\n          type: 'proactive-trigger',\r\n          channel: 'web',\r\n          payload: { text: currentMessage }\r\n        });\r\n\r\n        // Listen for response from Botpress\r\n        let responseReceived = false;\r\n        let checkCount = 0;\r\n        const maxChecks = 30; // Check for 15 seconds (30 * 500ms)\r\n        \r\n        const checkForResponse = setInterval(() => {\r\n          checkCount++;\r\n          \r\n          // Look for bot messages in the Botpress iframe\r\n          const iframe = document.querySelector('iframe[title*=\"Botpress\"], iframe[class*=\"webchat\"]');\r\n          if (iframe) {\r\n            try {\r\n              // Try to access iframe content (may be blocked by CORS)\r\n              const iframeDoc = iframe.contentDocument || iframe.contentWindow.document;\r\n              const botMessages = iframeDoc.querySelectorAll('[class*=\"from-bot\"], [class*=\"message-bot\"]');\r\n              \r\n              if (botMessages.length > 0) {\r\n                const lastMsg = botMessages[botMessages.length - 1];\r\n                const responseText = lastMsg.textContent.trim();\r\n                \r\n                if (responseText && responseText !== currentMessage) {\r\n                  responseReceived = true;\r\n                  clearInterval(checkForResponse);\r\n                  \r\n                  const botMessage = {\r\n                    id: Date.now() + 1,\r\n                    type: 'bot',\r\n                    content: responseText,\r\n                    timestamp: new Date()\r\n                  };\r\n                  setMessages(prev => [...prev, botMessage]);\r\n                  setIsLoading(false);\r\n                  console.log('Bot response captured:', responseText);\r\n                }\r\n              }\r\n            } catch (e) {\r\n              // CORS blocked - can't access iframe content\r\n              console.log('Cannot access iframe content (CORS)');\r\n            }\r\n          }\r\n          \r\n          // Timeout after max checks\r\n          if (checkCount >= maxChecks && !responseReceived) {\r\n            clearInterval(checkForResponse);\r\n            const botMessage = {\r\n              id: Date.now() + 1,\r\n              type: 'bot',\r\n              content: 'I\\'m processing your question! For the full response, please check the chat widget in the bottom right corner. 🤖',\r\n              timestamp: new Date()\r\n            };\r\n            setMessages(prev => [...prev, botMessage]);\r\n            setIsLoading(false);\r\n          }\r\n        }, 500);\r\n        \r\n      } else {\r\n        // Botpress not available\r\n        console.warn('Botpress WebChat not available');\r\n        const botMessage = {\r\n          id: Date.now() + 1,\r\n          type: 'bot',\r\n          content: 'Please use the chat widget in the bottom right corner (🤖) to chat with me!',\r\n          timestamp: new Date()\r\n        };\r\n        setMessages(prev => [...prev, botMessage]);\r\n        setIsLoading(false);\r\n      }\r\n    } catch (error) {\r\n      console.error('Error in sendMessage:', error);\r\n      const errorMessage = {\r\n        id: Date.now() + 1,\r\n        type: 'bot',\r\n        content: 'Sorry, I encountered an error. Please try using the chat widget in the bottom right corner.',\r\n        timestamp: new Date()\r\n      };\r\n      setMessages(prev => [...prev, errorMessage]);\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  // Handle Enter key\r\n  const handleKeyPress = (e) => {\r\n    if (e.key === 'Enter' && !e.shiftKey) {\r\n      e.preventDefault();\r\n      sendMessage();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"pawsbot-chat-container\">\r\n      {/* Header */}\r\n      <div className=\"pawsbot-chat-header\">\r\n        <div className=\"header-content\">\r\n          <div className=\"header-left\">\r\n            <div className=\"bot-avatar\">\r\n              <span className=\"bot-icon\">🤖</span>\r\n            </div>\r\n            <div className=\"header-info\">\r\n              <h1 className=\"bot-title\">PawsBot AI Assistant</h1>\r\n              <p className=\"bot-subtitle\">Your AI companion for pet care advice</p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Main Chat Area */}\r\n      <div className=\"pawsbot-chat-main\">\r\n        {messages.length === 1 ? (\r\n          /* Welcome Screen with Quick Questions */\r\n          <div className=\"welcome-screen\">\r\n            <div className=\"welcome-content\">\r\n              <div className=\"welcome-icon\">\r\n                <span>🐾</span>\r\n              </div>\r\n              <h2 className=\"welcome-title\">Welcome to PawsCare AI!</h2>\r\n              <p className=\"welcome-text\">\r\n                Ask me anything about your pet's health, behavior, training, or general care.\r\n              </p>\r\n              \r\n              <div className=\"quick-questions-grid\">\r\n                <p className=\"quick-questions-label\">Try asking me about:</p>\r\n                {quickQuestions.map((item, index) => (\r\n                  <button\r\n                    key={index}\r\n                    className=\"quick-question-card\"\r\n                    onClick={() => handleQuickQuestion(item.question)}\r\n                  >\r\n                    <span className=\"quick-question-icon\">{item.icon}</span>\r\n                    <span className=\"quick-question-title\">{item.title}</span>\r\n                    <span className=\"quick-question-preview\">{item.question}</span>\r\n                  </button>\r\n                ))}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        ) : (\r\n          /* Chat Messages */\r\n          <div className=\"chat-messages\">\r\n            {messages.map((message) => (\r\n              <div\r\n                key={message.id}\r\n                className={`message-wrapper ${message.type === 'user' ? 'user-message' : 'bot-message'}`}\r\n              >\r\n                {message.type === 'bot' && (\r\n                  <div className=\"message-avatar\">\r\n                    <span className=\"avatar-icon\">🤖</span>\r\n                  </div>\r\n                )}\r\n                <div className=\"message-content\">\r\n                  <div className=\"message-bubble\">\r\n                    <p className=\"message-text\">{message.content}</p>\r\n                  </div>\r\n                  <span className=\"message-time\">\r\n                    {message.timestamp.toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' })}\r\n                  </span>\r\n                </div>\r\n                {message.type === 'user' && (\r\n                  <div className=\"message-avatar user-avatar\">\r\n                    <span className=\"avatar-icon\">👤</span>\r\n                  </div>\r\n                )}\r\n              </div>\r\n            ))}\r\n            \r\n            {isLoading && (\r\n              <div className=\"message-wrapper bot-message\">\r\n                <div className=\"message-avatar\">\r\n                  <span className=\"avatar-icon\">🤖</span>\r\n                </div>\r\n                <div className=\"message-content\">\r\n                  <div className=\"message-bubble typing-indicator\">\r\n                    <span></span>\r\n                    <span></span>\r\n                    <span></span>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            )}\r\n            \r\n            <div ref={messagesEndRef} />\r\n          </div>\r\n        )}\r\n      </div>\r\n\r\n      {/* Input Area */}\r\n      <div className=\"pawsbot-chat-input\">\r\n        <form onSubmit={sendMessage} className=\"input-form\">\r\n          <div className=\"input-wrapper\">\r\n            <textarea\r\n              ref={inputRef}\r\n              value={inputMessage}\r\n              onChange={(e) => setInputMessage(e.target.value)}\r\n              onKeyPress={handleKeyPress}\r\n              placeholder=\"Ask anything about your pet...\"\r\n              className=\"chat-input\"\r\n              rows=\"1\"\r\n              disabled={isLoading}\r\n            />\r\n            <button\r\n              type=\"submit\"\r\n              className=\"send-button\"\r\n              disabled={!inputMessage.trim() || isLoading}\r\n            >\r\n              <svg width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\">\r\n                <line x1=\"22\" y1=\"2\" x2=\"11\" y2=\"13\"></line>\r\n                <polygon points=\"22 2 15 22 11 13 2 9 22 2\"></polygon>\r\n              </svg>\r\n            </button>\r\n          </div>\r\n        </form>\r\n        <p className=\"input-disclaimer\">\r\n          PawsBot can make mistakes. Always consult with a veterinarian for serious health concerns.\r\n        </p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PawsBot;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}